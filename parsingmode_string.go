// Code generated by "stringer -linecomment -type ParsingMode,Ternary"; DO NOT EDIT.

package gomme

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ParsingModeHappy-0]
	_ = x[ParsingModeError-1]
	_ = x[ParsingModeHandle-2]
	_ = x[ParsingModeRewind-3]
	_ = x[ParsingModeEscape-4]
}

const _ParsingMode_name = "happyerrorhandlerewindescape"

var _ParsingMode_index = [...]uint8{0, 5, 10, 16, 22, 28}

func (i ParsingMode) String() string {
	if i < 0 || i >= ParsingMode(len(_ParsingMode_index)-1) {
		return "ParsingMode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ParsingMode_name[_ParsingMode_index[i]:_ParsingMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TernaryNo-0]
	_ = x[TernaryMaybe-1]
	_ = x[TernaryYes-2]
}

const _Ternary_name = "nomaybeyes"

var _Ternary_index = [...]uint8{0, 2, 7, 10}

func (i Ternary) String() string {
	if i < 0 || i >= Ternary(len(_Ternary_index)-1) {
		return "Ternary(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Ternary_name[_Ternary_index[i]:_Ternary_index[i+1]]
}
